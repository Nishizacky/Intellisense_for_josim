async function simulation_exec(e){const t=/\/[^\/]+$/;let n=String(e).replace(t,"");n.includes(" ")&&vscode.window.showInformationMessage("filename should not contain ' '."),n+="/josim_resultCSV",fs.mkdir(n,e=>{if(e)throw"err: "+e});const i=new Date,o=String(i.getHours())+String(i.getMinutes())+String(i.getSeconds())+"_"+String(i.getMonth()+1)+String(i.getDate())+"_"+String(i.getFullYear()),a=n+"/jsm_out_"+o+".csv",s="josim-cli "+e+" -o "+a+" -m";return new Promise((e,t)=>{exec(s,(n,i,o)=>{n&&t(vscode.window.showErrorMessage(o)),e(a)})})}function ShowPlotDraw(e){let t=vscode.window.createWebviewPanel("plotData","Plot-result",vscode.ViewColumn.One,{enableScripts:!0});t.webview.html=e}function getCsvResultFromSimulation(e){return new Promise((t,n)=>{const i=fs.createReadStream(e).pipe(csv.parse());i.on("error",e=>n(e));const o=[];i.on("data",e=>o.push(e)),i.on("end",()=>t(o))})}async function simulationResult2html(e){let t,n=" ",o=" ",a=" ",s=" ",r=" ",l=[],c=[],m=[],g=[],u=[],h=[],p=[],d=[],f=[],v=[],w=0,y=0,x=0;const P=/^P/,S=/^I/,I=/^V/,$="Phase [rad]",b="Current [μA]",F="Voltage [μV]";xaxisLabelPrefixUnit=prefixUnit.substr(0,1),console.log(prefixUnit),console.log(xaxisLabelPrefixUnit);const k={title:"Time ["+xaxisLabelPrefixUnit+"s]",showexponent:"all",exponentformat:"e"},C={family:"Times New Roman",size:downloadImageFontSize};let M=e=>({xaxis:k,yaxis:{title:e},font:C}),N={xaxis:k,yaxis:{title:$,tickvals:[],ticktext:[],tickmode:"array",tickangle:"auto"},font:C};const O={responsive:!0,modeBarButtonsToRemove:["toImage"],editable:!0};let T=await getCsvResultFromSimulation(e);g=T[0],T.shift(),g.shift();const E=transpose(T);let J=0;switch(xaxisLabelPrefixUnit){case"m":J=1e3;break;case"u":J=1e6;break;case"n":J=1e9;break;case"p":J=1e12;break;case"f":J=1e15}for(l=E[0].map(e=>e*J),c=E,c.shift(),i=0;i<g.length;i++)P.test(g[i])&&(w=1),S.test(g[i])&&(y=1),I.test(g[i])&&(x=1);for(i=0;i<g.length;i++)m={x:l,y:c[i],name:g[i],type:"scatter"},u.push(m);for(i=0;i<g.length;i++)P.test(g[i])?(u[i].y=u[i].y.map(e=>e/Math.PI),h.push(u[i])):S.test(g[i])?(u[i].y=u[i].y.map(e=>1e6*e),p.push(u[i])):I.test(g[i])&&(u[i].y=u[i].y.map(e=>1e6*e),d.push(u[i]));if(w>0){const e=function(e,t){return Math.max(e,t)},t=function(e,t){return Math.min(e,t)};for(i=0;i<Object.keys(h).length;i++)f.push(h[i].y.reduce(e)),v.push(h[i].y.reduce(t));const s=Math.trunc(f.reduce(e)),r=Math.trunc(v.reduce(t));for(i=r;i<=s;i++){let e;N.yaxis.tickvals.push(i),e=-1==i?"$-\\pi$":0==i?"$0$":1==i?"$\\pi$":`$${String(i)}\\pi$`,N.yaxis.ticktext.push(e)}a=`\n        Plotly.newPlot(\n            "phasePlot",\n            ${JSON.stringify(h)},\n            ${JSON.stringify(N)},\n            ${JSON.stringify(O)}\n        )\n        `,n+=a,o+=`<div id="phasePlot"></div>\n        <button onclick="saveAsImage('phasePlot')">↑Save as ${toImageFormat}</button>\n        `}y>0&&(t=b,s=`\n        Plotly.newPlot(\n            "currentPlot",\n            ${JSON.stringify(p)},\n            ${JSON.stringify(M(t))},\n            ${JSON.stringify(O)}\n        )\n        `,n+=s,o+=` <div id="currentPlot"></div>\n        <button onclick="saveAsImage('currentPlot')">↑Save as ${toImageFormat}</button>\n        `),x>0&&(t=F,r=`\n        Plotly.newPlot(\n            "voltagePlot",\n            ${JSON.stringify(d)},\n            ${JSON.stringify(M(t))},\n            ${JSON.stringify(O)}\n        )\n        `,n+=r,o+=`<div id="voltagePlot"></div>\n        <button onclick="saveAsImage('voltagePlot')">↑Save as ${toImageFormat}</button>\n        `);const R={script:n,div:o},_=`{format: '${toImageFormat}' , width: ${downloadImageWidth}, height: ${downloadImageHeight}}`,j=`<!DOCTYPE html>\n    <html>\n        <head>\n            <script src="https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_SVG"></script>\n            <script src="https://cdn.plot.ly/plotly-latest.min.js"></script>\n        </head>\n        ${R.div}\n        <script>\n            ${R.script}\n            function saveAsImage(id) {\n                var plotlyGraph = document.getElementById(id);\n                Plotly.toImage(plotlyGraph,${_})\n                    .then(function (url) {\n                        var a = document.createElement('a');\n                        a.href = url;\n                        a.download = 'plot.${toImageFormat}';\n                        a.click();\n                    });\n            }\n        </script>\n    </html>\n  `,D=e.replace(".csv",".html");return fs.writeFileSync(D,j.replace("<!DOCTYPE html>\n","")),j}async function getFileNamesInFolder(e){try{const t=[],n=await vscode.workspace.findFiles(new vscode.RelativePattern(e,"*"));for(const e of n){const n=path.basename(e.fsPath),i=fs.statSync(e.fsPath),o=i.birthtime.getTime();t.push({fileName:n,filePath:e.fsPath,createdTime:o})}let i=t.sort((e,t)=>t.createdTime-e.createdTime),o=[];return i.forEach(e=>{o.push(e.filePath)}),o}catch(e){return console.error("Error occurred while getting file names:",e),[]}}async function autoDeleteTmpFiles(e){let t=[],n=[];for(e.forEach(e=>{t.push(e.replace(/\..+/,""))}),n=Array.from(new Set(t)),i=saveCount-1;i<n.length;i++){let t=n[i]+"..+",o=new RegExp(t);e.filter(function(e){return e.match(o)}).forEach(e=>{fs.unlinkSync(e)})}console.log(n)}const{exec:exec}=require("child_process"),vscode=require("vscode"),fs=require("fs"),path=require("path"),csv=require("csv"),saveImage=vscode.workspace.getConfiguration("saveImage"),toImageFormat=saveImage.get("Format"),downloadImageWidth=saveImage.get("Width"),downloadImageHeight=saveImage.get("Height"),downloadImageFontSize=saveImage.get("fontsize"),tmpFiles=vscode.workspace.getConfiguration("tmpFiles"),saveCount=tmpFiles.get("saveCount"),graphConfig=vscode.workspace.getConfiguration("graph"),prefixUnit=graphConfig.get("timescale");exports.showSimulationResult=async function(e){let t=e.fsPath;if(!t.includes(" ")){let e=await getFileNamesInFolder(path.dirname(t)+"/josim_resultCSV");return autoDeleteTmpFiles(e),vscode.window.withProgress({location:vscode.ProgressLocation.Notification,title:"",cancellable:!0},async(e,n)=>{n.onCancellationRequested(()=>{console.log("User canceled the long running operation")}),e.report({increment:0}),e.report({increment:10,message:"Simulation progressing"});let i=await simulation_exec(t);e.report({increment:70,message:"Exporting output file"});let o=await simulationResult2html(i);e.report({increment:80,message:"Loading HTML"}),ShowPlotDraw(o)})}{let e=t.replaceAll(" ","_"),n="Josim file name should not have 'space', please change it.\nsuggested: "+e;vscode.window.showErrorMessage(n)}};const transpose=e=>e[0].map((t,n)=>e.map(e=>e[n]));