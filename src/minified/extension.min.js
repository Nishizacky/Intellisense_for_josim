function getCurrentWord(e,i){const r=e.getWordRangeAtPosition(i,/[\.a-zA-Z0-9_]+/);if(!r)return null;const t=e.lineAt(i.line).text.slice(r.start.character,r.end.character);return t}function activate(e){e.subscriptions.push(vscode.languages.registerHoverProvider(JOSIM_MODE,new JOSIM_HoverProvider)),e.subscriptions.push(vscode.languages.registerDefinitionProvider(JOSIM_MODE,new JOSIM_DefinitionProvider));for(let i=0;i<disposable.length;i++)e.subscriptions.push(disposable[i])}function deactivate(){}const vscode=require("vscode"),superFinder=require("./superFinder.min"),simulationExec=require("./simulation_exec.min"),JOSIM_MODE={scheme:"file",language:"josim"},jsmFormatter=require("./formatter.min");class JOSIM_HoverProvider{async provideHover(e,i,r){const t=getCurrentWord(e,i);var o=await superFinder.superFinder(e,t,"range"),n=new vscode.MarkdownString;return n.appendCodeblock(o,"josim"),Promise.resolve(new vscode.Hover(n))}}class JOSIM_DefinitionProvider{async provideDefinition(e,i,r){const t=getCurrentWord(e,i);return superFinder.superFinder(e,t,"loc")}}let disposable=[];disposable.concat(vscode.commands.registerCommand("josim-cli.executeSimulation",()=>{const e=vscode.window.activeTextEditor,i=e.document.uri;simulationExec.showSimulationResult(i)})),disposable.concat(vscode.languages.registerDocumentFormattingEditProvider("josim",{provideDocumentFormattingEdits:e=>jsmFormatter.jsmFormatter(e)})),module.exports={activate:activate,deactivate:deactivate};