function getCurrentWord(e,i){const o=e.getWordRangeAtPosition(i,/[\.a-zA-Z0-9_]+/);if(!o)return null;const r=e.lineAt(i.line).text.slice(o.start.character,o.end.character);return r}function activate(e){e.subscriptions.push(vscode.languages.registerHoverProvider(JOSIM_MODE,new JOSIM_HoverProvider)),e.subscriptions.push(vscode.languages.registerDefinitionProvider(JOSIM_MODE,new JOSIM_DefinitionProvider));for(let i=0;i<disposable.length;i++)e.subscriptions.push(disposable[i])}function deactivate(){}const vscode=require("vscode"),superFinder=require("./superFinder.js"),simulationExec=require("./simulation_exec.js"),JOSIM_MODE={scheme:"file",language:"josim"},jsmFormatter=require("./formatter.js");class JOSIM_HoverProvider{async provideHover(e,i,o){const r=getCurrentWord(e,i);var t=await superFinder.superFinder(e,r,"range"),s=new vscode.MarkdownString;return s.appendCodeblock(t,"josim"),Promise.resolve(new vscode.Hover(s))}}class JOSIM_DefinitionProvider{async provideDefinition(e,i,o){const r=getCurrentWord(e,i);return superFinder.superFinder(e,r,"loc")}}let disposable=[];disposable.concat(vscode.commands.registerCommand("josim-cli.executeSimulation",()=>{const e=vscode.window.activeTextEditor,i=e.document.uri;simulationExec.showSimulationResult(i)})),disposable.concat(vscode.languages.registerDocumentFormattingEditProvider("josim",{provideDocumentFormattingEdits:e=>jsmFormatter.jsmFormatter(e)})),disposable.concat(vscode.commands.registerCommand("josim-cli.executeSimulationNoPlot",()=>{const e=vscode.window.activeTextEditor,i=e.document.uri;simulationExec.executeJosimCli(i)})),module.exports={activate:activate,deactivate:deactivate};